{"version":3,"sources":["serviceWorker.ts","Assets/CircleForm.svg","Assets/PhoneMapCircle.svg","Assets/Logo.tsx","Components/Homepage.tsx","Components/TopBar.tsx","Components/Login.tsx","Components/StrengthBar.tsx","Components/SignUp.tsx","Assets/PageNotFound.svg","Components/FourOFour.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","Logo","viewBox","xmlns","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","style","height","d","fill","Homepage","history","useHistory","useEffect","axios","get","withCredentials","className","label","variant","type","onClick","push","src","Circle","alt","width","City","paddingTop","TopBar","Login","useState","email","setEmail","password","setPassword","error","setError","prefixComponent","placeholder","size","required","onChange","value","ticked","marginRight","margin","post","then","res","status","buttonIcon","buttonColor","textDecoration","lineHeight","StrengthBar","currentStrength","strength","setStrength","calColor","barElements","i","backgroundColor","bars","SignUp","emailValid","setEmailValid","reTypedPassword","setReTypedPassword","passwordStrength","setPasswordStrength","checkPassword","input","passwordInput","retypedInput","test","length","passwordCheck","check","signUp","color","iconColor","FourOFour","display","justifyContent","alignItems","PageNotFound","ReactDOM","render","basename","exact","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.525fce7e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n/* eslint-disable */\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                        \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" }\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. HomepageV0 is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","export default __webpack_public_path__ + \"static/media/CircleForm.5687544a.svg\";","export default __webpack_public_path__ + \"static/media/PhoneMapCircle.16ff1356.svg\";","import * as React from \"react\";\n\nconst Logo = () => {\n    return (\n        <svg\n            viewBox=\"0 0 89 28\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            strokeLinejoin=\"round\"\n            strokeMiterlimit={2}\n            style={{ height: \"27px\" }}\n        >\n            <path\n                d=\"M34.276 21.812l-1.064-3.534H28.25l-1.064 3.534h-3.28L28.804 6.95h4.003l4.834 14.862h-3.365zM30.763 9.888h-.107l-1.64 5.643h3.408l-1.661-5.643zM38.45 21.812l3.684-5.685-3.642-5.494h3.578l2.086 3.514h.086l2.022-3.514h3.322l-3.705 5.6 3.727 5.58H46.03l-2.15-3.642h-.086l-2.065 3.641h-3.28zM53.036 9.44c-.639 0-1.107-.148-1.384-.446-.298-.277-.447-.66-.447-1.108v-.468c0-.447.149-.83.447-1.129.277-.276.745-.425 1.384-.425.639 0 1.107.149 1.405.425.277.299.426.682.426 1.129v.468c0 .448-.15.83-.426 1.108-.298.298-.766.447-1.405.447zm-1.576 1.193h3.151v11.18H51.46v-11.18zM60.68 21.812c-1.086 0-1.874-.255-2.363-.787-.512-.533-.767-1.278-.767-2.279V6.056h3.151v13.308h1.406v2.448H60.68zM65.578 9.44c-.64 0-1.108-.148-1.385-.446-.298-.277-.447-.66-.447-1.108v-.468c0-.447.15-.83.447-1.129.277-.276.746-.425 1.385-.425.638 0 1.107.149 1.405.425.277.299.426.682.426 1.129v.468c0 .448-.15.83-.426 1.108-.298.298-.767.447-1.405.447zm-1.576 1.193h3.151v11.18h-3.151v-11.18zM74.755 22.068c-.852 0-1.618-.15-2.278-.426-.66-.277-1.235-.66-1.683-1.171-.468-.49-.809-1.107-1.043-1.831a7.854 7.854 0 01-.362-2.428c0-.873.107-1.682.34-2.406a5.298 5.298 0 011.023-1.831 4.66 4.66 0 011.64-1.193c.66-.276 1.405-.404 2.235-.404.916 0 1.725.149 2.385.468.66.32 1.193.724 1.597 1.257.426.532.724 1.128.937 1.81a8.21 8.21 0 01.277 2.171v.937h-7.176v.17c0 .725.192 1.32.596 1.747.405.426 1.022.639 1.874.639.66 0 1.192-.128 1.597-.384a7.908 7.908 0 001.15-.937l1.576 1.96c-.49.574-1.15 1.043-1.938 1.362-.81.32-1.725.49-2.747.49zm-.064-9.37c-.639 0-1.128.214-1.49.618-.362.426-.554.98-.554 1.682v.17h3.918v-.19c0-.682-.15-1.236-.447-1.662-.32-.404-.788-.617-1.427-.617zM82.059 21.812V10.633h3.151v2.428h.107c.063-.32.149-.618.298-.916.149-.277.34-.532.575-.766.234-.235.51-.405.83-.554.32-.128.703-.192 1.15-.192h.553v2.939h-.787c-.916 0-1.597.128-2.045.362-.447.234-.681.681-.681 1.341v6.537h-3.151z\"\n                fill=\"#1e4ee5\"\n                fillRule=\"nonzero\"\n            />\n            <g>\n                <path\n                    d=\"M9.31 0l9.31 9.31-9.31 9.31L0 9.31 9.31 0z\"\n                    fill=\"#053fff\"\n                />\n                <path\n                    d=\"M9.31 4.404l9.31 9.31-9.31 9.311L0 13.715l9.31-9.31z\"\n                    fill=\"#055eff\"\n                />\n                <path\n                    d=\"M9.31 9.31l9.31 9.31-9.31 9.311L0 18.621l9.31-9.31z\"\n                    fill=\"#057eff\"\n                />\n            </g>\n        </svg>\n    );\n};\n\nexport default Logo;\n","// @flow\nimport * as React from \"react\";\nimport { useEffect } from \"react\";\nimport { Button } from \"core\";\nimport axios from \"axios\";\nimport \"../Css/Homescreen.css\";\nimport { useHistory } from \"react-router-dom\";\nimport Circle from \"../Assets/CircleForm.svg\";\nimport City from \"../Assets/PhoneMapCircle.svg\";\nimport Logo from \"../Assets/Logo\";\n\nconst Homepage = () => {\n    const history = useHistory();\n    useEffect(() => {\n        axios.get(\"https://api.axilier.com/getUser\", { withCredentials: true });\n    });\n\n    return (\n        <>\n            <div className={\"top-bar\"}>\n                <Logo />\n                <div className={\"top-bar-item\"}>\n                    <Button\n                        label={\"Product\"}\n                        variant={\"text\"}\n                        type={\"tertiary\"}\n                    />\n                    <Button\n                        label={\"Resources\"}\n                        variant={\"text\"}\n                        type={\"tertiary\"}\n                    />\n                    <Button\n                        label={\"Contact\"}\n                        variant={\"text\"}\n                        type={\"tertiary\"}\n                    />\n                </div>\n                <div className={\"top-bar-item\"}>\n                    <Button\n                        label={\"Sign Up\"}\n                        variant={\"outlined\"}\n                        className={\"btn-slide-left\"}\n                    />\n                    <Button\n                        label={\"Login\"}\n                        variant={\"text\"}\n                        onClick={() => history.push(\"/login\")}\n                    />\n                </div>\n            </div>\n            <div className={\"main-body\"}>\n                <div className={\"main-body-item\"}>\n                    <img src={Circle} alt={\"\"} style={{ width: \"60%\" }} />\n                </div>\n                <div className={\"main-body-item\"}>\n                    <img\n                        src={City}\n                        alt={\"phone city\"}\n                        style={{ width: \"60%\", paddingTop: \"200px\" }}\n                    />\n                </div>\n                <div className={\"floating-text\"}>\n                    <p className={\"floating-text-title\"}>\n                        A modern solution\n                        <br />\n                        to a persistent problem\n                    </p>\n                    <p className={\"floating-text-small\"}>\n                        Create, Connect, Distribute maps among your\n                        <br />\n                        employees and or customers using your\n                        <br />\n                        preexisting cloud storage\n                        <br />\n                        with basic QR codes\n                    </p>\n                    <Button label={\"Sign Up\"} variant={\"outlined\"} />\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Homepage;\n","// @flow\nimport * as React from \"react\";\nimport { Button } from \"core\";\nimport Logo from \"../Assets/Logo\";\nimport \"../Css/TopBar.css\";\n\nconst TopBar = () => {\n    return (\n        <div className={\"web-topbar\"}>\n            <Logo />\n            <Button label={\"Contact\"} variant={\"text\"} type={\"tertiary\"} />\n            <div className={\"web-topbar-divider\"} />\n        </div>\n    );\n};\n\nexport default TopBar;\n","// @flow\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { Button, Github, Google, Key, Mail, TextBox, Tickbox } from \"core\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../Css/Login.css\";\nimport \"../Css/Account.css\";\nimport TopBar from \"./TopBar\";\n\nconst Login = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n\n    const history = useHistory();\n\n    function login() {\n        axios\n            .post(\n                \"https://api.axilier.com/login\",\n                {\n                    email,\n                    password,\n                },\n                { withCredentials: true }\n            )\n            .then(\n                (res) => {\n                    if (res.status === 200) {\n                        history.push(\"/account\");\n                    }\n                },\n                () => {\n                    setError(\"Something went wrong\");\n                }\n            );\n    }\n\n    return (\n        <div className={\"web-account-main\"}>\n            <TopBar />\n            <div className={\"web-account-main-body\"}>\n                <h2>Welcome Back</h2>\n                <TextBox\n                    prefixComponent={<Mail />}\n                    placeholder={\"Enter your email address\"}\n                    variant={\"outlined\"}\n                    size={\"large\"}\n                    required\n                    label={\"Email\"}\n                    onChange={(value) => setEmail(value)}\n                />\n                <TextBox\n                    prefixComponent={<Key />}\n                    placeholder={\"Enter your password\"}\n                    variant={\"outlined\"}\n                    size={\"large\"}\n                    required\n                    label={\"Password\"}\n                    type={\"password\"}\n                    onChange={(value) => setPassword(value)}\n                />\n                <div className={\"web-login-lower-controls\"}>\n                    <div className={\"web-login-remember-me\"}>\n                        <Tickbox\n                            ticked={false}\n                            style={{ marginRight: \"3px\" }}\n                        />\n                        Remember me\n                    </div>\n                    <Button\n                        className={\"web-login-forgot-password\"}\n                        label={\"Forgot your password?\"}\n                        variant={\"text\"}\n                        type={\"tertiary\"}\n                    />\n                </div>\n                <Button\n                    style={{ margin: \"10px 0\" }}\n                    label={\"login\"}\n                    variant={\"contained\"}\n                    onClick={() => login()}\n                />\n                {error}\n                <div className={\"web-account-body-divider\"}>\n                    <div className={\"web-account-body-divider-bar\"} />\n                    <div className={\"web-account-body-divider-text\"}>OR</div>\n                    <div className={\"web-account-body-divider-bar\"} />\n                </div>\n                <Button\n                    size={\"large\"}\n                    label={\"Sign In with google\"}\n                    buttonIcon={<Google />}\n                    className={\"web-account-other-options\"}\n                />\n                <Button\n                    size={\"large\"}\n                    label={\"Sign In with Github\"}\n                    className={\"web-account-other-options\"}\n                    buttonIcon={<Github />}\n                    buttonColor={\"#1B1817\"}\n                />\n                <div className={\"web-account-change-page\"}>\n                    No account yet?\n                    <Button\n                        label={\"Sign Up\"}\n                        variant={\"text\"}\n                        style={{\n                            textDecoration: \"underline\",\n                            margin: \"0 4px\",\n                            lineHeight: 1.1,\n                        }}\n                        onClick={() => history.push(\"/signup\")}\n                    />\n                    here\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n","// @flow\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport \"../Css/StengthBar.css\";\n\ntype Props = {\n    currentStrength: number;\n};\n\nconst StrengthBar = ({ currentStrength }: Props) => {\n    const [strength, setStrength] = useState(currentStrength);\n\n    useEffect(() => setStrength(strength), [currentStrength]);\n\n    const calColor = () => {\n        switch (currentStrength) {\n            case 0:\n                return \"#E6E6E6\";\n            case 1:\n                return \"#E01414\";\n            case 2:\n                return \"#E07C14\";\n            case 3:\n                return \"#E0A914\";\n            case 4:\n                return \"#37B411\";\n            default:\n                return \"#E6E6E6\";\n        }\n    };\n\n    const bars = (): Array<JSX.Element> => {\n        const barElements: Array<JSX.Element> = [];\n        for (let i = 0; i < 4; i += 1) {\n            barElements.push(\n                <div\n                    className={\"web-strength-bar-sub\"}\n                    style={{\n                        backgroundColor:\n                            i < currentStrength ? calColor() : \"#E6E6E6\",\n                    }}\n                />\n            );\n        }\n        return barElements;\n    };\n\n    return (\n        <div className={\"web-strength-bar-main\"}>\n            <div className={\"web-strength-bar-margins\"} />\n            {bars()}\n            <div className={\"web-strength-bar-margins\"} />\n        </div>\n    );\n};\n\nexport default StrengthBar;\n","// @flow\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport \"../Css/Account.css\";\nimport \"../Css/SignUp.css\";\nimport {\n    Button,\n    Cross,\n    Github,\n    Google,\n    Key,\n    Mail,\n    Question,\n    TextBox,\n} from \"core\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport TopBar from \"./TopBar\";\nimport StrengthBar from \"./StrengthBar\";\n\nconst SignUp = () => {\n    // eslint-disable-next-line no-unused-vars\n    const [emailValid, setEmailValid] = useState(true);\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [reTypedPassword, setReTypedPassword] = useState(\"\");\n    const [passwordStrength, setPasswordStrength] = useState(0);\n\n    const history = useHistory();\n\n    function checkPassword(input: {\n        passwordInput: string;\n        retypedInput: string;\n    }) {\n        const { passwordInput, retypedInput } = input;\n        let strength = 0;\n        if (passwordInput === retypedInput) {\n            strength += 1;\n        }\n        if (/[A-Z]/.test(passwordInput)) {\n            strength += 1;\n        }\n        if (/[0-9]/.test(passwordInput)) {\n            strength += 1;\n        }\n        if (/[^\\w\\s]/.test(passwordInput)) {\n            strength += 1;\n        }\n        if (passwordInput !== retypedInput) {\n            strength = 0;\n        }\n        if (passwordInput === \"\" || retypedInput === \"\") {\n            strength = 0;\n        }\n        if (passwordInput.length <= 8) {\n            strength = 0;\n        }\n        setPasswordStrength(strength);\n    }\n\n    function checkEmail() {\n        return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email); // DOC not perfect but will do basic validation, do email validation on server\n    }\n\n    /* eslint-disable */\n\n    function passwordCheck(check: boolean): string {\n        return password === \"\" || reTypedPassword === \"\"\n            ? \"#BEBEBE\"\n            : check\n            ? \"#1EB932\"\n            : \"#F01919\";\n    }\n\n    function signUp() {\n        if (!checkEmail()) {\n            setEmailValid(false);\n        } else {\n            setEmailValid(true);\n            axios\n                .post(\n                    \"https://api.axilier.com/register\",\n                    {\n                        email,\n                        password,\n                    },\n                    { withCredentials: true }\n                )\n                .then(\n                    (res) => {\n                        if (res.status === 200) {\n                            history.push(\"/account\");\n                        }\n                    },\n                    () => {}\n                );\n        }\n    }\n\n    return (\n        <div className={\"web-account-main\"}>\n            <TopBar />\n            <div className={\"web-account-main-body\"}>\n                <h2>Welcome to Axilier</h2>\n                <TextBox\n                    prefixComponent={<Mail />}\n                    placeholder={\"Enter your email address\"}\n                    variant={\"outlined\"}\n                    size={\"large\"}\n                    required\n                    label={\"Email\"}\n                    onChange={(value) => {\n                        setEmail(value);\n                    }}\n                />\n                {!emailValid ? (\n                    <div\n                        style={{\n                            color: \"#F01919\",\n                        }}\n                        className={\"web-signup-email-error\"}\n                    >\n                        <Cross\n                            iconColor={\"#F01919\"}\n                            style={{ marginRight: \"3px\" }}\n                        />\n                        Invalid Email Address\n                    </div>\n                ) : null}\n                <TextBox\n                    prefixComponent={<Key />}\n                    placeholder={\"Enter your password\"}\n                    variant={\"outlined\"}\n                    size={\"large\"}\n                    required\n                    label={\"Password\"}\n                    type={\"password\"}\n                    onChange={(value) => {\n                        setPassword(value);\n                        checkPassword({\n                            passwordInput: value,\n                            retypedInput: reTypedPassword,\n                        });\n                    }}\n                />\n                <TextBox\n                    prefixComponent={<Key />}\n                    placeholder={\"Re-Enter your password\"}\n                    variant={\"outlined\"}\n                    size={\"large\"}\n                    required\n                    label={\"Re-Enter Password\"}\n                    type={\"password\"}\n                    onChange={(value) => {\n                        setReTypedPassword(value);\n                        checkPassword({\n                            passwordInput: password,\n                            retypedInput: value,\n                        });\n                    }}\n                />\n\n                <div\n                    className={\"web-signup-strength-notices\"}\n                    style={{ color: \"#BEBEBE\" }}\n                >\n                    <div className={\"web-signup-strength-notices-col\"}>\n                        <div\n                            style={{\n                                color: passwordCheck(\n                                    password === reTypedPassword\n                                ),\n                            }}\n                        >\n                            <Question\n                                iconColor={passwordCheck(\n                                    password === reTypedPassword\n                                )}\n                            />\n                            Passwords match?\n                        </div>\n                        <div\n                            style={{\n                                color: passwordCheck(password.length >= 8),\n                            }}\n                        >\n                            <Question\n                                iconColor={passwordCheck(password.length >= 8)}\n                            />\n                            At least 8 characters long?\n                        </div>\n                        <div\n                            style={{\n                                color: passwordCheck(/[A-Z]/.test(password)),\n                            }}\n                        >\n                            <Question\n                                iconColor={passwordCheck(\n                                    /[A-Z]/.test(password)\n                                )}\n                            />{\" \"}\n                            Contains a capital letter?\n                        </div>\n                    </div>\n                    <div className={\"web-signup-strength-notices-col\"}>\n                        <div\n                            style={{\n                                color: passwordCheck(/[0-9]/.test(password)),\n                            }}\n                        >\n                            <Question\n                                iconColor={passwordCheck(\n                                    /[0-9]/.test(password)\n                                )}\n                            />{\" \"}\n                            Contains a number?\n                        </div>\n                        <div\n                            style={{\n                                color: passwordCheck(/[^\\w\\s]/.test(password)),\n                            }}\n                        >\n                            <Question\n                                iconColor={passwordCheck(\n                                    /[^\\w\\s]/.test(password)\n                                )}\n                            />{\" \"}\n                            Contains a symbol?\n                        </div>\n                    </div>\n                </div>\n\n                {password === \"\" && reTypedPassword === \"\" ? (\n                    <div className={\"web-signup-strength-text\"}>\n                        Enter your password above to calculate strength\n                    </div>\n                ) : passwordStrength < 4 ? (\n                    <div className={\"web-signup-strength-text\"}>\n                        Your password is too weak please fix the red issues\n                        above\n                    </div>\n                ) : (\n                    <div className={\"web-signup-strength-text\"}>\n                        Your password is strong enough you can continue\n                    </div>\n                )}\n\n                <StrengthBar currentStrength={passwordStrength} />\n                <Button\n                    style={{ margin: \"10px 0\" }}\n                    label={\"sign up\"}\n                    variant={\"contained\"}\n                    onClick={() => signUp()}\n                />\n                <div className={\"web-account-body-divider\"}>\n                    <div className={\"web-account-body-divider-bar\"} />\n                    <div className={\"web-account-body-divider-text\"}>OR</div>\n                    <div className={\"web-account-body-divider-bar\"} />\n                </div>\n                <Button\n                    size={\"large\"}\n                    label={\"Sign Up with google\"}\n                    buttonIcon={<Google />}\n                    className={\"web-account-other-options\"}\n                />\n                <Button\n                    size={\"large\"}\n                    label={\"Sign Up with Github\"}\n                    className={\"web-account-other-options\"}\n                    buttonIcon={<Github />}\n                    buttonColor={\"#1B1817\"}\n                />\n                <div className={\"web-account-change-page\"}>\n                    Already have an account?\n                    <Button\n                        label={\"Login\"}\n                        variant={\"text\"}\n                        style={{\n                            textDecoration: \"underline\",\n                            margin: \"0 4px\",\n                            lineHeight: 1.1,\n                        }}\n                        onClick={() => history.push(\"/login\")}\n                    />\n                    here\n                </div>\n            </div>\n        </div>\n    );\n    /* eslint-enable */\n};\nexport default SignUp;\n","export default __webpack_public_path__ + \"static/media/PageNotFound.79da0172.svg\";","// @flow\nimport * as React from \"react\";\nimport PageNotFound from \"../Assets/PageNotFound.svg\";\n\nconst FourOFour = () => {\n    return (\n        <div\n            style={{\n                height: \"100%\",\n                width: \"100%\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n            }}\n        >\n            <img src={PageNotFound} alt={\"Page not found\"} />\n        </div>\n    );\n};\n\nexport default FourOFour;\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Css/index.css\";\nimport BuildScreen from \"build-screen\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Account, FourOFour, Homepage, Login, SignUp } from \"./Components\";\n\nReactDOM.render(\n    <BrowserRouter basename={\"/\"}>\n        <Switch>\n            <Route exact path={\"/\"}>\n                <Homepage />\n            </Route>\n            <Route exact path={\"/build\"}>\n                <BuildScreen />\n            </Route>\n            <Route exact path={\"/login\"}>\n                <Login />\n            </Route>\n            <Route exact path={\"/account\"}>\n                <Account />\n            </Route>\n            <Route exact path={\"/signup\"}>\n                <SignUp />\n            </Route>\n            <Route path={\"*\"}>\n                <FourOFour />\n            </Route>\n        </Switch>\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}